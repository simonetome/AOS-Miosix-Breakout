
printf("\x1b[%d;%dH###",15,x-1); // this prints ### in encoded position 
fflush(stdout); // flush the standard output: method to print everything instant. (try fprintf instead to avoid instruction overhead)
printf("\x1b[999;999H");  // this prints nothing at the 999;999 position --> move the cursor at bottom right corner trick 

//set option to take in input only one character

/* TERMIOS CANONICAL MODE 

       In canonical mode:

       * Input is made available line by line.  An input line is
         available when one of the line delimiters is typed (NL, EOL,
         EOL2; or EOF at the start of line).  Except in the case of EOF,
         the line delimiter is included in the buffer returned by
         read(2).

       * Line editing is enabled (ERASE, KILL; and if the IEXTEN flag is
         set: WERASE, REPRINT, LNEXT).  A read(2) returns at most one
         line of input; if the read(2) requested fewer bytes than are
         available in the current line of input, then only as many bytes
         as requested are read, and the remaining characters will be
         available for a future read(2).

       * The maximum line length is 4096 chars (including the
         terminating newline character); lines longer than 4096 chars
         are truncated.  After 4095 characters, input processing (e.g.,
         ISIG and ECHO* processing) continues, but any input data after
         4095 characters up to (but not including) any terminating
         newline is discarded.  This ensures that the terminal can
         always receive more input until at least one line can be read.

*/


tcgetattr(STDIN_FILENO,&t);
t.c_lflag &= ~ECHO;             // ECHO is a flag to print input characters 
t.c_lflag &= ~(ICANON);         // ICANON -> canonical mode ()
tcsetattr(STDIN_FILENO,TCSANOW,&t);

c=getchar(); // gets a character from the stdin 
//         int  *termios struct

/*
from <unistd.h>
    STDERR_FILENO
    File number of stderr; 2.
    STDIN_FILENO
    File number of stdin; 0.
    STDOUT_FILENO
    File number of stdout; 1.
*/
tcgetattr(STDIN_FILENO,&t);
t.c_lflag |= ECHO;
t.c_lflag |= (ICANON);
tcsetattr(STDIN_FILENO,TCSANOW,&t); //TCSANOW --> changes attributes now


printf("\e[1;1H\e[2J\n");//clear screen

	
	
	
tcgetattr(STDIN_FILENO,&t);
t.c_lflag &= ~(ICANON);
tcsetattr(STDIN_FILENO,TCSANOW,&t);

tcgetattr(STDIN_FILENO,&t);
t.c_lflag |= (ICANON);
tcsetattr(STDIN_FILENO,TCSANOW,&t);      
        
printf("\e[1;1H\e[2J\n"); 
printf("\x1b[%d;%dH",5,lastX);
printf("\x1b[999;999H");






